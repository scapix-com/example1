// Generated by Scapix Language Bridge
// https://www.scapix.com

#include <chat/extended_contact.h>
#import "ExtendedContact.h"

@implementation ExtendedContact

-(instancetype)initWithId:(NSString*)id name:(NSString*)name
{
	return scapix::bridge::objc::init<chat::extended_contact, void(const std::basic_string<char> &, const std::basic_string<char> &)>(self, id, name);
}

-(instancetype)initWithP1:(int)p1
{
	return scapix::bridge::objc::init<chat::extended_contact, void(int)>(self, p1);
}

-(instancetype)init
{
	return scapix::bridge::objc::init<chat::extended_contact, void()>(self);
}

-(void)test:(NSString*)p1 p2:(Contact*)p2 p3:(ExtendedContact*)p3
{
	return scapix::bridge::objc::call<void(chat::extended_contact::*)(std::basic_string<char>, std::shared_ptr<chat::contact>, std::shared_ptr<chat::extended_contact>), &chat::extended_contact::test, void>(self, p1, p2, p3);
}

@end

@implementation ExtendedContact2

-(instancetype)init
{
	return scapix::bridge::objc::init<chat::extended_contact2, void()>(self);
}

-(void)test
{
	return scapix::bridge::objc::call<void(chat::extended_contact2::*)(), &chat::extended_contact2::test, void>(self);
}

@end

@implementation ExtendedContact3

-(instancetype)init
{
	return scapix::bridge::objc::init<chat::extended_contact3, void()>(self);
}

-(void)test
{
	return scapix::bridge::objc::call<void(chat::extended_contact3::*)(), &chat::extended_contact3::test, void>(self);
}

@end
