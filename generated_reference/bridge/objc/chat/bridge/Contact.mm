// Generated by Scapix Language Bridge
// https://www.scapix.com

#include <chat/contact.h>
#import "Contact.h"

@implementation Contact

-(instancetype)init
{
	return scapix::bridge::objc::init<chat::contact, void()>(self);
}

-(instancetype)initWithId:(NSString*)id name:(NSString*)name
{
	return scapix::bridge::objc::init<chat::contact, void(const std::basic_string<char> &, const std::basic_string<char> &)>(self, id, name);
}

-(NSString*)deviceName
{
	return scapix::bridge::objc::call<std::basic_string<char>(chat::contact::*)() const, &chat::contact::device_name, NSString*>(self);
}

-(NSString*)id
{
	return scapix::bridge::objc::call<const std::basic_string<char> &(chat::contact::*)(), &chat::contact::id, NSString*>(self);
}

-(void)id:(NSString*)id
{
	return scapix::bridge::objc::call<void(chat::contact::*)(const std::basic_string<char> &), &chat::contact::id, void>(self, id);
}

-(NSString*)name
{
	return scapix::bridge::objc::call<const std::basic_string<char> &(chat::contact::*)(), &chat::contact::name, NSString*>(self);
}

-(void)name:(NSString*)name
{
	return scapix::bridge::objc::call<void(chat::contact::*)(const std::basic_string<char> &), &chat::contact::name, void>(self, name);
}

-(void)registerOnNameChange:(void(^)(NSString*))handler
{
	return scapix::bridge::objc::call<void(chat::contact::*)(std::function<void (std::basic_string<char>)>), &chat::contact::register_on_name_change, void>(self, handler);
}

@end
