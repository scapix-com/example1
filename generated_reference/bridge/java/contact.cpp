// Generated by Scapix Language Bridge
// https://www.scapix.com

#include <scapix/bridge/java/init.h>
#include <chat/contact.h>

namespace scapix {
namespace link {
namespace java {

template <>
struct class_name<chat::contact>
{
	using type = SCAPIX_META_STRING("com/scapix/chat/Contact");
};

} // namespace java
} // namespace link
} // namespace scapix

void scapix_java_export_contact()
{
	scapix::link::java::native_methods
	<
		scapix::link::java::class_name_t<chat::contact>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("_init"),
			void(),
			void(scapix::bridge::java::init<chat::contact>::*)(),
			&scapix::bridge::java::init<chat::contact>::create
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("_init"),
			void(scapix::link::java::ref<SCAPIX_META_STRING("java/lang/String")>, scapix::link::java::ref<SCAPIX_META_STRING("java/lang/String")>),
			void(scapix::bridge::java::init<chat::contact>::*)(const std::basic_string<char> &, const std::basic_string<char> &),
			&scapix::bridge::java::init<chat::contact>::create
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("deviceName"),
			scapix::link::java::ref<SCAPIX_META_STRING("java/lang/String")>(),
			std::basic_string<char>(chat::contact::*)() const,
			&chat::contact::device_name
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("id"),
			scapix::link::java::ref<SCAPIX_META_STRING("java/lang/String")>(),
			const std::basic_string<char> &(chat::contact::*)(),
			&chat::contact::id
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("id"),
			void(scapix::link::java::ref<SCAPIX_META_STRING("java/lang/String")>),
			void(chat::contact::*)(const std::basic_string<char> &),
			&chat::contact::id
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("name"),
			scapix::link::java::ref<SCAPIX_META_STRING("java/lang/String")>(),
			const std::basic_string<char> &(chat::contact::*)(),
			&chat::contact::name
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("name"),
			void(scapix::link::java::ref<SCAPIX_META_STRING("java/lang/String")>),
			void(chat::contact::*)(const std::basic_string<char> &),
			&chat::contact::name
		>,

		scapix::link::java::native_method
		<
			SCAPIX_META_STRING("registerOnNameChange"),
			void(scapix::link::java::ref<scapix::link::java::function<SCAPIX_META_STRING("com/scapix/chat/Contact$Function0"), void(scapix::link::java::ref<SCAPIX_META_STRING("java/lang/String")>)>>),
			void(chat::contact::*)(std::function<void (std::basic_string<char>)>),
			&chat::contact::register_on_name_change
		>
	>::register_();
}
