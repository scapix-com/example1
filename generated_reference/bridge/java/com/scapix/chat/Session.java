// Generated by Scapix Language Bridge
// https://www.scapix.com

package com.scapix.chat;

public final class Session extends com.scapix.Bridge
{
	@FunctionalInterface
	public static interface Function2
	{
		int call(java.lang.String p1, Contact[] p2);
	}

	@FunctionalInterface
	public static interface Function3
	{
		java.lang.String call(java.lang.String p1, Contact[] p2);
	}

	@FunctionalInterface
	public static interface Function4
	{
		java.lang.String call(int p1, Contact[] p2);
	}

	@FunctionalInterface
	public static interface Function0
	{
		void call();
	}

	@FunctionalInterface
	public static interface Function1
	{
		void call(java.lang.String p1);
	}

	public Session() { _init(); }
	public Session(java.lang.String p1) { _init(p1); }
	public Session(java.lang.String[] p1, int p2, int p3, int p4, int p5) { _init(p1, p2, p3, p4, p5); }
//	public Session(int p1) { _init(p1); }
	public Session(int p1, long p2) { _init(p1, p2); }
//	public Session(java.lang.String s1, java.lang.String s2) { _init(s1, s2); }
	public Session(java.lang.String s1, java.lang.String s2, int p3) { _init(s1, s2, p3); }
	public Session(java.lang.String s1, java.lang.String s2, int p3, long p4) { _init(s1, s2, p3, p4); }
//	public Session(java.lang.String s1, java.lang.String s2, java.lang.String p3) { _init(s1, s2, p3); }
//	public Session(Function0 callback) { _init(callback); }
	public native java.lang.String string(java.lang.String filter);
//	public native java.lang.String string(java.lang.String filter);
//	public native !UNKNOWN! string(!UNKNOWN! filter);
//	public native java.lang.String string(java.lang.String filter);
//	public native java.lang.String string(java.lang.String filter);
//	public native java.lang.String string(java.lang.String filter);
	public native void testJavaKeyword(int package_);
	public native void synchronized_();
	public native void global();
	public native void del();
	public native void getHTTPRequest22();
	public native void SetHTTP2Request3D();
	public native void SetHTTP2Request4d();
	public native void someCSharpName();
	public native void SomeNSStringName();
	public native void HELLOHTTP2A333De8();
	public native void HELLOHttp();
	public native Contact object(Contact m);
//	public native java.lang.String object(java.lang.String m);
//	public native int object(int m);
//	public native void testEnum(!UNKNOWN! p1);
	public native int autoTest();
//	public native !UNKNOWN! autoTest2();
//	public native !UNKNOWN! testUnsupportedParamType();
//	public native void testUnsupportedParamType(int p1, !UNKNOWN! p2);
//	public native void testUnsupportedParamType(java.lang.String p1, !UNKNOWN! p2);
	public native void aliasTest(java.lang.String s1, java.lang.String s2, int i1, int i2);
	public native void asyncConnect(java.lang.String host, Function1 handler);
	public native Contact[] contacts();
	public native Contact[] contacts(java.lang.String filter);
	public native java.util.TreeMap<java.lang.String, Contact> map(java.util.TreeMap<java.lang.String, Contact> m);
//	public native java.util.TreeMap<java.lang.String, java.lang.String> map(java.util.TreeMap<java.lang.String, java.lang.String> m);
	public native java.util.TreeMap<java.lang.Integer, java.lang.String> map2(java.util.TreeMap<java.lang.Integer, java.lang.String> m);
	public native java.util.TreeMap<java.lang.Integer, java.lang.Float> map3(java.util.TreeMap<java.lang.Integer, java.lang.Float> m);
	public native java.util.TreeSet<java.lang.String> set(java.util.TreeSet<java.lang.String> s);
	public native java.util.HashMap<java.lang.String, Contact> unorderedMap(java.util.HashMap<java.lang.String, Contact> s);
	public native java.util.HashSet<java.lang.String> unorderedSet(java.util.HashSet<java.lang.String> s);
	public native Contact[] tags(Contact[] tags);
	public native int[] ints(int[] ints);
	public native java.lang.String[] strings(java.lang.String[] p1);
	public native void addContact(Contact contact);
	public native void removeContact(Contact contact);
	public native java.lang.String sendMessage(java.lang.String message);
	public native void sendMessage2(java.lang.String message, int count);
	public native java.lang.String sendMessage3(Contact contact, java.lang.String message, int count);
	public native void close();
	public native Contact sample2();
	public native Contact sample2(boolean p1, short p2, int p3, float p4, double p5);
	public native static void sample();
	public native static int sample(java.lang.String p1, java.lang.String[] p2);
	public native int connect(Function2 handler);
	public native void connect2(Function2 handler);
	public native void connect3(Function3 handler);
	public native void connect4(Function4 handler);
	public native void connect7(Function0[][] p1);
	public native void connect8(java.lang.String[][] p1);
	public native void testException(Function0 callback);
	public native void throwException();
	public native java.lang.String[] strings();

	private native void _init();
	private native void _init(java.lang.String p1);
	private native void _init(java.lang.String[] p1, int p2, int p3, int p4, int p5);
	private native void _init(int p1, long p2);
	private native void _init(java.lang.String s1, java.lang.String s2, int p3);
	private native void _init(java.lang.String s1, java.lang.String s2, int p3, long p4);
	private Session(Tag tag) {}
	static { System.loadLibrary("chatlib"); }
}

final class Session2 extends com.scapix.Bridge
{
	public native void addContact(Contact contact);
	public native void addSession(Session session);
	public native void addSession2(Session2 session);

	private Session2(Tag tag) {}
	static { System.loadLibrary("chatlib"); }
}
