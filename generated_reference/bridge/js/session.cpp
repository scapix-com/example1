// Generated by Scapix Language Bridge
// https://www.scapix.com

#include <scapix/bridge/js/init.h>
#include <chat/session.h>

EMSCRIPTEN_BINDINGS(scapix_session)
{
	emscripten::class_<chat::session>("Session")
		.smart_ptr<std::shared_ptr<chat::session>>("shared_ptr<chat::session>")
		.constructor(&std::make_shared<chat::session>)
		.constructor(&std::make_shared<chat::session, const std::basic_string<char> &>)
		.constructor(&std::make_shared<chat::session, std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >, int, int, int, int>)
		.constructor(&std::make_shared<chat::session, int, long long>)
		.constructor(&std::make_shared<chat::session, std::basic_string<char> &&, std::basic_string<char> &&, const int &>)
		.constructor(&std::make_shared<chat::session, std::basic_string<char> &&, std::basic_string<char> &&, const int &, long long>)
		.function("string", scapix::link::js::function<std::basic_string<char>(chat::session::*)(std::basic_string<char>), &chat::session::string>::select<>::func)
		.function("testJavaKeyword", scapix::link::js::function<void(chat::session::*)(int), &chat::session::test_java_keyword>::select<>::func)
		.function("synchronized_", scapix::link::js::function<void(chat::session::*)(), &chat::session::synchronized>::select<>::func)
		.function("global", scapix::link::js::function<void(chat::session::*)(), &chat::session::global>::select<>::func)
		.function("del", scapix::link::js::function<void(chat::session::*)(), &chat::session::del>::select<>::func)
		.function("getHTTPRequest22", scapix::link::js::function<void(chat::session::*)(), &chat::session::getHTTPRequest22>::select<>::func)
		.function("SetHTTP2Request3D", scapix::link::js::function<void(chat::session::*)(), &chat::session::SetHTTP2Request_3D>::select<>::func)
		.function("SetHTTP2Request4d", scapix::link::js::function<void(chat::session::*)(), &chat::session::SetHTTP2Request_4d>::select<>::func)
		.function("someCSharpName", scapix::link::js::function<void(chat::session::*)(), &chat::session::someCSharpName>::select<>::func)
		.function("SomeNSStringName", scapix::link::js::function<void(chat::session::*)(), &chat::session::_someNSStringName_>::select<>::func)
		.function("HELLOHTTP2A333De8", scapix::link::js::function<void(chat::session::*)(), &chat::session::HELLO_HTTP2A333De8>::select<>::func)
		.function("HELLOHttp", scapix::link::js::function<void(chat::session::*)(), &chat::session::HELLO_Http>::select<>::func)
		.function("object", scapix::link::js::function<std::shared_ptr<chat::contact>(chat::session::*)(std::shared_ptr<chat::contact>), &chat::session::object>::select<>::func)
		.function("autoTest", scapix::link::js::function<int(chat::session::*)(), &chat::session::auto_test>::select<>::func)
		.function("aliasTest", scapix::link::js::function<void(chat::session::*)(std::basic_string<char>, std::basic_string<char>, int, int), &chat::session::alias_test>::select<>::func)
		.function("asyncConnect", scapix::link::js::function<void(chat::session::*)(std::basic_string<char>, std::function<void (std::basic_string<char>)>), &chat::session::async_connect>::select<>::func)
		.function("contacts", scapix::link::js::function<const std::vector<std::shared_ptr<chat::contact>, std::allocator<std::shared_ptr<chat::contact> > > &(chat::session::*)(), &chat::session::contacts>::select<>::func)
		.function("contacts", scapix::link::js::function<std::vector<std::shared_ptr<chat::contact>, std::allocator<std::shared_ptr<chat::contact> > >(chat::session::*)(std::basic_string<char>), &chat::session::contacts>::select<>::func)
		.function("map", scapix::link::js::function<std::map<std::basic_string<char>, std::shared_ptr<chat::contact>, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, std::shared_ptr<chat::contact> > > >(chat::session::*)(std::map<std::basic_string<char>, std::shared_ptr<chat::contact>, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, std::shared_ptr<chat::contact> > > >), &chat::session::map>::select<>::func)
		.function("map2", scapix::link::js::function<std::map<int, std::basic_string<char>, std::less<int>, std::allocator<std::pair<const int, std::basic_string<char> > > >(chat::session::*)(std::map<int, std::basic_string<char>, std::less<int>, std::allocator<std::pair<const int, std::basic_string<char> > > >), &chat::session::map2>::select<>::func)
		.function("map3", scapix::link::js::function<std::map<int, float, std::less<int>, std::allocator<std::pair<const int, float> > >(chat::session::*)(std::map<int, float, std::less<int>, std::allocator<std::pair<const int, float> > >), &chat::session::map3>::select<>::func)
		.function("set", scapix::link::js::function<std::set<std::basic_string<char>, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > >(chat::session::*)(std::set<std::basic_string<char>, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > >), &chat::session::set>::select<>::func)
		.function("unorderedMap", scapix::link::js::function<std::unordered_map<std::basic_string<char>, std::shared_ptr<chat::contact>, std::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, std::shared_ptr<chat::contact> > > >(chat::session::*)(std::unordered_map<std::basic_string<char>, std::shared_ptr<chat::contact>, std::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, std::shared_ptr<chat::contact> > > >), &chat::session::unordered_map>::select<>::func)
		.function("unorderedSet", scapix::link::js::function<std::unordered_set<std::basic_string<char>, std::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::basic_string<char> > >(chat::session::*)(std::unordered_set<std::basic_string<char>, std::hash<std::basic_string<char> >, std::equal_to<std::basic_string<char> >, std::allocator<std::basic_string<char> > >), &chat::session::unordered_set>::select<>::func)
		.function("tags", scapix::link::js::function<std::vector<std::shared_ptr<chat::contact>, std::allocator<std::shared_ptr<chat::contact> > >(chat::session::*)(std::vector<std::shared_ptr<chat::contact>, std::allocator<std::shared_ptr<chat::contact> > >), &chat::session::tags>::select<>::func)
		.function("ints", scapix::link::js::function<std::vector<int, std::allocator<int> >(chat::session::*)(std::vector<int, std::allocator<int> >), &chat::session::ints>::select<>::func)
		.function("strings", scapix::link::js::function<std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >(chat::session::*)(std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >), &chat::session::strings>::select<>::func)
		.function("addContact", scapix::link::js::function<void(chat::session::*)(std::shared_ptr<chat::contact>), &chat::session::add_contact>::select<>::func)
		.function("removeContact", scapix::link::js::function<void(chat::session::*)(std::shared_ptr<chat::contact>), &chat::session::remove_contact>::select<>::func)
		.function("sendMessage", scapix::link::js::function<std::basic_string<char>(chat::session::*)(std::basic_string<char>), &chat::session::send_message>::select<>::func)
		.function("sendMessage2", scapix::link::js::function<void(chat::session::*)(std::basic_string<char>, int), &chat::session::send_message2>::select<>::func)
		.function("sendMessage3", scapix::link::js::function<std::basic_string<char>(chat::session::*)(std::shared_ptr<chat::contact>, std::basic_string<char>, int), &chat::session::send_message3>::select<>::func)
		.function("close", scapix::link::js::function<void(chat::session::*)(), &chat::session::close>::select<>::func)
		.function("sample2", scapix::link::js::function<std::shared_ptr<chat::contact>(chat::session::*)(), &chat::session::sample2>::select<>::func)
		.function("sample2", scapix::link::js::function<std::shared_ptr<chat::contact>(chat::session::*)(bool, short, int, float, double), &chat::session::sample2>::select<>::func)
		.class_function("sample", scapix::link::js::function<void(), &chat::session::sample>::select<>::func)
		.class_function("sample", scapix::link::js::function<int(std::basic_string<char>, std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >), &chat::session::sample>::select<>::func)
		.function("connect", scapix::link::js::function<int(chat::session::*)(std::function<int (std::basic_string<char>, std::vector<std::shared_ptr<chat::contact>, std::allocator<std::shared_ptr<chat::contact> > >)>), &chat::session::connect>::select<>::func)
		.function("connect2", scapix::link::js::function<void(chat::session::*)(std::function<int (std::basic_string<char>, std::vector<std::shared_ptr<chat::contact>, std::allocator<std::shared_ptr<chat::contact> > >)>), &chat::session::connect2>::select<>::func)
		.function("connect3", scapix::link::js::function<void(chat::session::*)(std::function<std::basic_string<char> (std::basic_string<char>, std::vector<std::shared_ptr<chat::contact>, std::allocator<std::shared_ptr<chat::contact> > >)>), &chat::session::connect3>::select<>::func)
		.function("connect4", scapix::link::js::function<void(chat::session::*)(std::function<std::basic_string<char> (int, std::vector<std::shared_ptr<chat::contact>, std::allocator<std::shared_ptr<chat::contact> > >)>), &chat::session::connect4>::select<>::func)
		.function("connect7", scapix::link::js::function<void(chat::session::*)(std::vector<std::vector<std::function<void ()>, std::allocator<std::function<void ()> > >, std::allocator<std::vector<std::function<void ()>, std::allocator<std::function<void ()> > > > >), &chat::session::connect7>::select<>::func)
		.function("connect8", scapix::link::js::function<void(chat::session::*)(std::vector<std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > >, std::allocator<std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > > > >), &chat::session::connect8>::select<>::func)
		.function("testException", scapix::link::js::function<void(chat::session::*)(std::function<void ()>), &chat::session::test_exception>::select<>::func)
		.function("throwException", scapix::link::js::function<void(chat::session::*)(), &chat::session::throw_exception>::select<>::func)
		.function("strings", scapix::link::js::function<const std::vector<std::basic_string<char>, std::allocator<std::basic_string<char> > > &(chat::session::*)() const, &chat::session::strings>::select<>::func)
	;

	emscripten::class_<chat::session2>("Session2")
		.smart_ptr<std::shared_ptr<chat::session2>>("shared_ptr<chat::session2>")
		.constructor(&std::make_shared<chat::session2>)
		.function("addContact", scapix::link::js::function<void(chat::session2::*)(std::shared_ptr<chat::contact>), &chat::session2::add_contact>::select<>::func)
		.function("addSession", scapix::link::js::function<void(chat::session2::*)(std::shared_ptr<chat::session>), &chat::session2::add_session>::select<>::func)
		.function("addSession2", scapix::link::js::function<void(chat::session2::*)(std::shared_ptr<chat::session2>), &chat::session2::add_session2>::select<>::func)
	;
}
